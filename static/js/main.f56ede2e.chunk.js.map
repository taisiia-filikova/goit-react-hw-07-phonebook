{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css","components/ErrorImg/ErrorImg.module.css","components/ContactFilter/ContactFilter.module.css","components/Container/Container.module.css","components/Loader/Loader.module.css","components/Container/Container.js","redux/contacts/contacts-actions.js","redux/contacts/contacts-types.js","utils/contacts-api.js","redux/contacts/contacts-operations.js","redux/contacts/contacts-selectors.js","components/Loader/Loader.js","components/ContactForm/ContactForm.js","utils/motionVar.js","img/sad.png","components/ErrorImg/ErrorImg.js","components/ContactList/ContactList.js","components/ContactFilter/ContactFilter.js","App.js","redux/contacts/contacts-reducer.js","redux/store.js","index.js"],"names":["module","exports","Container","children","className","s","container","fetchContactsRequest","createAction","fetchContactsSuccess","fetchContactsError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","filterContact","axios","defaults","baseURL","fetchContacts","dispatch","get","then","data","catch","error","addContact","name","number","contact","post","contactsAPI","deleteContact","id","delete","getContacts","state","contacts","items","getLoading","isLoading","getError","getFilter","filter","getVisibleContacts","createSelector","normalizedFilter","toLowerCase","includes","Load","overlay","type","color","height","width","timeout","ContactForm","useDispatch","useSelector","contactsSelectors","useState","setName","setNumber","handleChange","evt","target","value","resetInput","form","onSubmit","preventDefault","find","checkRepeatName","checkRepeatNumber","trim","checkEmptyQuery","test","checkValidNumber","contactsOperations","toast","info","label","input","onChange","placeholder","options","delimiter","blocks","button","Loader","variants","initial","scale","animate","exit","transition","ease","duration","ErrorImg","message","div","role","wrapper","src","errorImg","alt","text","ContactList","visibleContacts","useEffect","length","ul","list","map","li","item","onClick","p","ContactFilter","contactsActions","App","autoClose","position","createReducer","_","payload","combineReducers","store","configureStore","reducer","contactsReducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f56ede2e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__22VOk\",\"label\":\"ContactForm_label__1G7L_\",\"input\":\"ContactForm_input__4OwIb\",\"button\":\"ContactForm_button__29-jF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__YHztv\",\"item\":\"ContactList_item__2sdPR\",\"data\":\"ContactList_data__1nldN\",\"button\":\"ContactList_button__215sh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"ErrorImg_wrapper__18Bsr\",\"text\":\"ErrorImg_text__2m9FW\",\"img\":\"ErrorImg_img__2pwU0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"ContactFilter_label__D4skN\",\"input\":\"ContactFilter_input__2UCeG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__x32c1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"overlay\":\"Loader_overlay__Bj5GJ\"};","import s from './Container.module.css';\n\nfunction Container({ children }) {\n  return <div className={s.container}>{children}</div>;\n}\n\nexport default Container;\n","import { createAction } from '@reduxjs/toolkit';\nimport {\n  FETCH_CONTACTS_REQUEST,\n  FETCH_CONTACTS_SUCCESS,\n  FETCH_CONTACTS_ERROR,\n  ADD_CONTACT_REQUEST,\n  ADD_CONTACT_SUCCESS,\n  ADD_CONTACT_ERROR,\n  DELETE_CONTACT_REQUEST,\n  DELETE_CONTACT_SUCCESS,\n  DELETE_CONTACT_ERROR,\n  FILTER_CONTACT,\n} from './contacts-types';\n\nexport const fetchContactsRequest = createAction(FETCH_CONTACTS_REQUEST);\nexport const fetchContactsSuccess = createAction(FETCH_CONTACTS_SUCCESS);\nexport const fetchContactsError = createAction(FETCH_CONTACTS_ERROR);\n\nexport const addContactRequest = createAction(ADD_CONTACT_REQUEST);\nexport const addContactSuccess = createAction(ADD_CONTACT_SUCCESS);\nexport const addContactError = createAction(ADD_CONTACT_ERROR);\n\nexport const deleteContactRequest = createAction(DELETE_CONTACT_REQUEST);\nexport const deleteContactSuccess = createAction(DELETE_CONTACT_SUCCESS);\nexport const deleteContactError = createAction(DELETE_CONTACT_ERROR);\n\nexport const filterContact = createAction(FILTER_CONTACT);\n","export const FETCH_CONTACTS_REQUEST = 'contacts/fetchContactsRequest';\nexport const FETCH_CONTACTS_SUCCESS = 'contacts/fetchContactsSuccess';\nexport const FETCH_CONTACTS_ERROR = 'contacts/fetchContactsError';\n\nexport const ADD_CONTACT_REQUEST = 'contacts/addContactRequest';\nexport const ADD_CONTACT_SUCCESS = 'contacts/addContactSuccess';\nexport const ADD_CONTACT_ERROR = 'contacts/addContactError';\n\nexport const DELETE_CONTACT_REQUEST = 'contacts/deleteContactRequest';\nexport const DELETE_CONTACT_SUCCESS = 'contacts/deleteContactSuccess';\nexport const DELETE_CONTACT_ERROR = 'contacts/deleteContactError';\n\nexport const FILTER_CONTACT = 'contacts/filter';\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'http://localhost:4040';\n\nexport function fetchContacts() {\n  return axios.get('/contacts');\n}\n\nexport function addContact(contact) {\n  return axios.post('/contacts', contact);\n}\n\nexport function deleteContact(id) {\n  return axios.delete(`/contacts/${id}`);\n}\n","import {\n  fetchContactsRequest,\n  fetchContactsSuccess,\n  fetchContactsError,\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n} from './contacts-actions';\nimport * as contactsAPI from '../../utils/contacts-api';\n\nexport const fetchContacts = () => dispatch => {\n  dispatch(fetchContactsRequest());\n\n  contactsAPI\n    .fetchContacts()\n    .then(({ data }) => dispatch(fetchContactsSuccess(data)))\n    .catch(error => dispatch(fetchContactsError(error)));\n};\n\nexport const addContact = (name, number) => dispatch => {\n  const contact = {\n    name,\n    number,\n  };\n\n  dispatch(addContactRequest());\n\n  contactsAPI\n    .addContact(contact)\n    .then(({ data }) => dispatch(addContactSuccess(data)))\n    .catch(error => dispatch(addContactError(error)));\n};\n\nexport const deleteContact = id => dispatch => {\n  dispatch(deleteContactRequest());\n\n  contactsAPI\n    .deleteContact(id)\n    .then(() => dispatch(deleteContactSuccess(id)))\n    .catch(error => dispatch(deleteContactError(error)));\n};\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const getContacts = state => state.contacts.items;\nexport const getLoading = state => state.contacts.isLoading;\nexport const getError = state => state.contacts.error;\nexport const getFilter = state => state.contacts.filter;\n\nexport const getVisibleContacts = createSelector(\n  [getContacts, getFilter],\n  (contacts, filter) => {\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(({ name }) =>\n      name.toLowerCase().includes(normalizedFilter),\n    );\n  },\n);\n","import s from './Loader.module.css';\n\nimport Loader from 'react-loader-spinner';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\n\nfunction Load() {\n  return (\n    <div className={s.overlay}>\n      <Loader\n        type=\"TailSpin\"\n        color=\"#613d5c\"\n        height={80}\n        width={80}\n        timeout={0}\n      />\n    </div>\n  );\n}\n\nexport default Load;\n","import { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { contactsOperations, contactsSelectors } from '../../redux/contacts';\nimport Cleave from 'cleave.js/react';\nimport { toast } from 'react-toastify';\n\nimport Loader from '../Loader/Loader';\n\nimport s from './ContactForm.module.css';\n\nfunction ContactForm() {\n  const dispatch = useDispatch();\n  const contacts = useSelector(contactsSelectors.getContacts);\n  const isLoading = useSelector(contactsSelectors.getLoading);\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleChange = evt => {\n    const { name, value } = evt.target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const checkRepeatName = name => {\n    return contacts.find(\n      contact => contact.name.toLowerCase() === name.toLowerCase(),\n    );\n  };\n\n  const checkRepeatNumber = number => {\n    return contacts.find(contact => contact.number === number);\n  };\n\n  const checkEmptyQuery = (name, number) => {\n    return name.trim() === '' || number.trim() === '';\n  };\n\n  const checkValidNumber = number => {\n    return !/\\d{3}[-]\\d{2}[-]\\d{2}/g.test(number);\n  };\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    if (checkRepeatName(name)) {\n      toast(`${name} is already in contacts.`);\n    } else if (checkRepeatNumber(number)) {\n      toast(`${number} is already in contacts.`);\n    } else if (checkEmptyQuery(name, number)) {\n      toast.info('Enter the name and phone number!');\n    } else if (checkValidNumber(number)) {\n      toast.error('Enter the correct phone number!');\n    } else {\n      dispatch(contactsOperations.addContact(name, number));\n    }\n    resetInput();\n  };\n\n  const resetInput = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form className={s.form} onSubmit={handleSubmit}>\n      <label className={s.label}>\n        Name\n        <input\n          className={s.input}\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={handleChange}\n          placeholder=\"Enter the name\"\n        />\n      </label>\n      <label className={s.label}>\n        Number\n        <Cleave\n          options={{ delimiter: '-', blocks: [3, 2, 2] }}\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          onChange={handleChange}\n          className={s.input}\n          placeholder=\"555-55-55\"\n        />\n      </label>\n      {!isLoading && (\n        <button className={s.button} type=\"submit\">\n          Add contact\n        </button>\n      )}\n      {isLoading && <Loader />}\n    </form>\n  );\n}\n\nexport default ContactForm;\n","export const variants = {\n  initial: { scale: 0 },\n  animate: { scale: 1 },\n  exit: { scale: 0 },\n  transition: { ease: 'easeOut', duration: 0.3 },\n};\n","export default __webpack_public_path__ + \"static/media/sad.9fb9c8f7.png\";","import { motion, AnimatePresence } from 'framer-motion';\nimport PropTypes from 'prop-types';\nimport s from './ErrorImg.module.css';\n\nimport errorImg from '../../img/sad.png';\n\nfunction ErrorImg({ message }) {\n  return (\n    <AnimatePresence>\n      <motion.div\n        role=\"alert\"\n        className={s.wrapper}\n        initial={{ scale: 0 }}\n        animate={{ scale: 1 }}\n        exit={{ scale: 0 }}\n        transition={{ ease: 'easeOut', duration: 0.3 }}\n      >\n        <img src={errorImg} width=\"500\" alt=\"Network Error\" />\n        <p text={message} className={s.text}>\n          {message}\n        </p>\n      </motion.div>\n    </AnimatePresence>\n  );\n}\n\nErrorImg.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n\nexport default ErrorImg;\n","import { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { contactsOperations, contactsSelectors } from '../../redux/contacts';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { variants } from '../../utils/motionVar';\nimport ErrorImg from '../ErrorImg/ErrorImg';\n\nimport s from './ContactList.module.css';\n\nfunction ContactList() {\n  const dispatch = useDispatch();\n  const visibleContacts = useSelector(contactsSelectors.getVisibleContacts);\n  const contacts = useSelector(contactsSelectors.getContacts);\n  const isLoading = useSelector(contactsSelectors.getLoading);\n  const error = useSelector(contactsSelectors.getError);\n\n  useEffect(() => dispatch(contactsOperations.fetchContacts()), [dispatch]);\n\n  return (\n    <>\n      {contacts.length > 0 && !error && (\n        <motion.ul className={s.list}>\n          <AnimatePresence>\n            {visibleContacts.map(({ id, name, number }) => (\n              <motion.li\n                className={s.item}\n                key={id}\n                initial=\"initial\"\n                animate=\"animate\"\n                exit=\"exit\"\n                transition=\"transition\"\n                variants={variants}\n              >\n                <p className={s.data}>\n                  <b>{name}</b>\n                  <em>{number}</em>\n                </p>\n                <button\n                  className={s.button}\n                  type=\"button\"\n                  onClick={() => dispatch(contactsOperations.deleteContact(id))}\n                ></button>\n              </motion.li>\n            ))}\n          </AnimatePresence>\n        </motion.ul>\n      )}\n\n      {!contacts.length && !error && !isLoading && (\n        <AnimatePresence>\n          <motion.p\n            initial=\"initial\"\n            animate=\"animate\"\n            exit=\"exit\"\n            transition=\"transition\"\n            variants={variants}\n          >\n            Your phonebook is empty. Please add contact.\n          </motion.p>\n        </AnimatePresence>\n      )}\n\n      {error && <ErrorImg message={error.message} />}\n    </>\n  );\n}\n\nexport default ContactList;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { contactsActions, contactsSelectors } from '../../redux/contacts';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { variants } from '../../utils/motionVar';\n\nimport s from './ContactFilter.module.css';\n\nfunction ContactFilter() {\n  const dispatch = useDispatch();\n  const filter = useSelector(contactsSelectors.getFilter);\n  const contacts = useSelector(contactsSelectors.getContacts);\n  const error = useSelector(contactsSelectors.getError);\n  return (\n    <>\n      {contacts.length > 0 && !error && (\n        <AnimatePresence>\n          <label className={s.label}>\n            <motion.input\n              initial=\"initial\"\n              animate=\"animate\"\n              exit=\"exit\"\n              transition=\"transition\"\n              variants={variants}\n              className={s.input}\n              type=\"text\"\n              value={filter}\n              onChange={evt =>\n                dispatch(contactsActions.filterContact(evt.target.value))\n              }\n            />\n          </label>\n        </AnimatePresence>\n      )}\n    </>\n  );\n}\nexport default ContactFilter;\n","import Container from './components/Container/Container';\nimport ContactForm from './components/ContactForm/ContactForm';\nimport ContactList from './components/ContactList/ContactList';\nimport ContactFilter from './components/ContactFilter/ContactFilter';\n\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nfunction App() {\n  return (\n    <Container>\n      <h1>Phonebook</h1>\n      <ContactForm />\n      <h2>Contacts</h2>\n      <ContactFilter />\n      <ContactList />\n      <ToastContainer autoClose={3700} position=\"top-center\" />\n    </Container>\n  );\n}\n\nexport default App;\n","import { createReducer, combineReducers } from '@reduxjs/toolkit';\nimport {\n  fetchContactsRequest,\n  fetchContactsSuccess,\n  fetchContactsError,\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n  filterContact,\n} from './contacts-actions';\n\nconst items = createReducer([], {\n  [fetchContactsSuccess]: (_, { payload }) => payload,\n  [addContactSuccess]: (state, { payload }) => [...state, payload],\n  [deleteContactSuccess]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst isLoading = createReducer(false, {\n  [fetchContactsRequest]: () => true,\n  [fetchContactsSuccess]: () => false,\n  [fetchContactsError]: () => false,\n  [addContactRequest]: () => true,\n  [addContactSuccess]: () => false,\n  [addContactError]: () => false,\n  [deleteContactRequest]: () => true,\n  [deleteContactSuccess]: () => false,\n  [deleteContactError]: () => false,\n});\n\nconst filter = createReducer('', {\n  [filterContact]: (_, { payload }) => payload,\n});\n\nconst error = createReducer(null, {\n  [fetchContactsError]: (_, { payload }) => payload,\n  [addContactError]: (_, { payload }) => payload,\n  [deleteContactError]: (_, { payload }) => payload,\n  [fetchContactsRequest]: () => null,\n  [addContactRequest]: () => null,\n  [deleteContactRequest]: () => null,\n});\n\nexport default combineReducers({\n  items,\n  filter,\n  isLoading,\n  error,\n});\n","import { configureStore } from '@reduxjs/toolkit';\nimport contactsReducer from './contacts/contacts-reducer';\n\nexport const store = configureStore({\n  reducer: {\n    contacts: contactsReducer,\n  },\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport { store } from './redux/store';\nimport 'modern-normalize/modern-normalize.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}